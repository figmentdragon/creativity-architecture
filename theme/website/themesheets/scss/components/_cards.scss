.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
  word-wrap: break-word;
  border: $card-border-width solid $card-border-color;
  border-radius: var(--border-radius-md);
  background-color: $card-bg;
  background-clip: border-box;
  box-shadow: $card-box-shadow;

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group {
    border-top: inherit;
    border-bottom: inherit;

    &:first-child {
      border-top-width: 0;
      border-top-left-radius: $card-inner-border-radius;
      border-top-right-radius: $card-inner-border-radius;
    }

    &:last-child {
      border-bottom-width: 0;
      border-bottom-right-radius: $card-inner-border-radius;
      border-bottom-left-radius: $card-inner-border-radius;
    }
  }
  // Due to specificity of the above selector (`.card > .list-group`), we must
  // use a child selector here to prevent double borders.
  > .card-header + .list-group,
  > .list-group + .card-footer {
    border-top: 0;
  }
}

.card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: $card-spacer-y $card-spacer-x;
  color: $card-color;
}

.card-title {
  font-family: $post-font;
  margin-bottom: $spacer;
  padding-left: 12.50%;
  text-align: left;
}

.card-subtitle {
  margin-top: $card-title-spacer-y * .5;
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link {
  &:hover {
    text-decoration: $link-hover-decoration;
  }

  + .card-link {
    margin-left: $card-spacer-x;
  }
}
//
// Optional textual caps
//

.card-header {
  z-index: $zindex-card-header;
  height: $col5;
  max-height: $col5;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  padding: $card-spacer-y $card-spacer-x;
  align-items: center;
  line-height: normal;
  overflow: hidden;
  color: $nav;
  background-color: $card-cap-bg;
  border-bottom: $card-border-width;
  border-style: solid;
  border-color: $card-border-color;
  @include box-sizing($border-box);
  @include box-shadow($card-box-shadow);

  &:first-child {
    @include border-radius($card-border-radius-inner $card-border-radius-inner 0 0);
  }

  .card-title {
    font-family: $post-title-font;
    align-self: flex-end;
    color: $color-post-title;
    display: block;
    display: flex;
    font-size: $card-title-font-size;
    font-weight: $card-title-text-font-weight;
    line-height: normal;
    overflow: hidden;
    margin: 0;
  }

  .card-subtitle {
    font-size: $card-subtitle-font-size;
    color: $card-subtitle-color;
    margin: 0;
  }

  .card-lead {
    font-family: $lead-font;
    font-size: $lead-font-size;
    color: $color-lead-text;
    line-height: $card-supporting-text-line-height;
    overflow: hidden;
    width: 90%;
  }

  &.card-header-bottom-border {
    border-bottom: 1px solid $card-border-color;
  }
}

.card-footer {
  padding: $card-spacer-y $card-spacer-x;
  color: $card-cap-color;
  border-top: $card-border-width solid $card-border-color;
  background-color: $card-cap-bg;

  &:last-child {
    @include border-radius(0 0 $card-border-radius-inner $card-border-radius-inner);
  }
}
//
// Header navs
//
.card-header-tabs {
  font-family: $btn-font;
  margin-right: calc($md * .5);
  margin-bottom: $md;
  margin-left: calc($md * .5);
  border-width: $border-width;
  border-color: $border;
  border-bottom: 0;
  border-radius: $border-radius-sm;
  @if $nav-tabs-link-active-bg != $card-bg {
    .nav-link.active {
      border-bottom-color: $active;
      background-color: $active-bg;
    }
  }
}

.card-header-pills {
  margin-right: -$card-cap-padding-x * 0.5;
  margin-left: -$card-cap-padding-x * 0.5;
}
// Card image
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: $card-img-overlay-padding;
  border-width: $border-width-xs;
  border-style: solid;
  border-color: $active;
  border-radius: $border-radius-lg;
}

// Card image
.card-img,
.card-img-bottom,
.card-img-top {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  margin: -1.325rem;
  @include border-radius(.25rem);
}

.card-img,
.card-img-top {
  @include border-start-radius($card-border-radius-inner $card-border-radius-inner 0 0);
}

.card-img,
.card-img-bottom {
  @include border-end-radius(0 0 $card-border-radius-inner $card-border-radius-inner);
}


//
// Background variations
//

.card-primary {
  @include card-variant($brand-primary, $brand-primary);
}
.card-success {
  @include card-variant($brand-success, $brand-success);
}
.card-info {
  @include card-variant($brand-info, $brand-info);
}
.card-warning {
  @include card-variant($brand-warning, $brand-warning);
}
.card-danger {
  @include card-variant($brand-danger, $brand-danger);
}

// Remove all backgrounds
.card-primary-outline {
  @include card-outline-variant($btn-primary-bg);
}
.card-secondary-outline {
  @include card-outline-variant($btn-secondary-border);
}
.card-info-outline {
  @include card-outline-variant($btn-info-bg);
}
.card-success-outline {
  @include card-outline-variant($btn-success-bg);
}
.card-warning-outline {
  @include card-outline-variant($btn-warning-bg);
}
.card-danger-outline {
  @include card-outline-variant($btn-danger-bg);
}

//
// Inverse text within a card for use with dark backgrounds
//

.card-inverse {
  @include card-inverse;
}

//
// Blockquote
//

.card-blockquote {
  padding: 0;
  margin-bottom: 0;
  border-left: 0;
}


//
// Card set
//

@if $enable-flex {
  @include media-breakpoint-up(sm) {
    .card-deck {
      display: flex;
      flex-flow: row wrap;
      margin-right: -.625rem;
      margin-left: -.625rem;

      .card {
        flex: 1 0 0;
        margin-right: .625rem;
        margin-left: .625rem;
      }
    }
  }
} @else {
  @include media-breakpoint-up(sm) {
    .card-deck {
      display: table;
      table-layout: fixed;
      border-spacing: 1.25rem 0;

      .card {
        display: table-cell;
        width: 1%;
        vertical-align: top;
      }
    }
    .card-deck-wrapper {
      margin-right: -1.25rem;
      margin-left: -1.25rem;
    }
  }
}


//
// Card groups
//
@include media-breakpoint-up(sm) {
  .card-group {
  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  @if $enable-flex {
    display: flex;
    flex-flow: row wrap;
  }
  @else {
    display: table;
    width: 100%;
    table-layout: fixed;
  }
  .card {
    @if $enable-flex {
      flex: 1 0 0;
    }
    @else {
      display: table-cell;
      vertical-align: top;
    }

    + .card {
      margin-left: 0;
      border-left: 0;
    }

    > .card {
    margin-bottom: $card-group-margin;
  }
  // Handle rounded corners
  @if $enable-rounded {
    &:first-child {
      @include border-right-radius(0);
      .card-img-top {
        border-top-right-radius: 0;
      }
      .card-img-bottom {
        border-bottom-right-radius: 0;
      }
    }
    &:last-child {
      @include border-left-radius(0);

      .card-img-top {
        border-top-left-radius: 0;
      }
      .card-img-bottom {
        border-bottom-left-radius: 0;
      }
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;

      .card-img-top,
      .card-img-bottom {
        border-radius: 0;
      }
    }
  }
}

//
// Card
//

@include media-breakpoint-up(sm) {
  .card-columns {
    column-count: 3;
    column-gap: 1.25rem;

    .card {
      display: inline-block;
      width: 100%; // Don't let them exceed the column width
    }
  }
}
