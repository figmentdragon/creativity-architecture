"use strict";
/**
 * Config types
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isString = exports.isNotEmpty = exports.isYamlInjectType = exports.isYamlAskChoiceType = exports.isYamlAskType = exports.isCommand = exports.isYamlScriptType = exports.isYamlSymLinkType = exports.isQuestionChoiceType = exports.isScriptCommandType = void 0;
function isScriptCommandType(input) {
    const obj = input;
    if (typeof obj.script === "string") {
        return true;
    }
    return false;
}
exports.isScriptCommandType = isScriptCommandType;
function isQuestionChoiceType(input) {
    const obj = input;
    if (typeof obj.name === "string" && typeof obj.checked === "boolean") {
        return true;
    }
    return false;
}
exports.isQuestionChoiceType = isQuestionChoiceType;
function isYamlSymLinkType(input) {
    const obj = input;
    const keys = Object.keys(obj);
    if (keys.length === 1 && typeof obj[keys[0]] === "string") {
        return true;
    }
    return false;
}
exports.isYamlSymLinkType = isYamlSymLinkType;
function isYamlScriptType(input) {
    const obj = input;
    if (typeof obj.script === "string") {
        return true;
    }
    return false;
}
exports.isYamlScriptType = isYamlScriptType;
function isCommand(value) {
    return (typeof value === "string" && value != "") || isYamlScriptType(value);
}
exports.isCommand = isCommand;
function isYamlAskType(input) {
    const obj = input;
    if (obj.id && typeof obj.id === "string") {
        return true;
    }
    return false;
}
exports.isYamlAskType = isYamlAskType;
function isYamlAskChoiceType(input) {
    const obj = input;
    const keys = Object.keys(obj);
    if (keys.length === 1 && typeof obj[keys[0]] === "boolean") {
        return true;
    }
    return false;
}
exports.isYamlAskChoiceType = isYamlAskChoiceType;
function isYamlInjectType(input) {
    const obj = input;
    if (obj.id &&
        typeof obj.id === "string" &&
        obj.target &&
        (typeof obj.target === "string" || Array.isArray(obj.target)) &&
        ((obj.file && typeof obj.file === "string") ||
            (obj.url &&
                typeof obj.url === "string" &&
                /https?:\/\//i.test(obj.url)) ||
            (obj.command &&
                (typeof obj.command === "string" || isScriptCommandType(obj.command))))) {
        return true;
    }
    return false;
}
exports.isYamlInjectType = isYamlInjectType;
/**
 * Other typeguards
 */
function isNotEmpty(value) {
    return value !== null && value !== undefined && value != "";
}
exports.isNotEmpty = isNotEmpty;
function isString(value) {
    return typeof value === "string";
}
exports.isString = isString;
