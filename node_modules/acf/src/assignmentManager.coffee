async = require 'async'
AssignmentUnique = require './assignmentUnique'

class AssignmentManager
  constructor : (options) ->
    @_store = options.store

  # 设置资源的权限分配记录（会删除之前分配的，不在assignments列表中的记录）
  setAssignmentsOfResource : (resource, assignments, callback) ->
    @_store.setAssignmentsOfResource resource, assignments, callback

  # 分配资源的权限分配记录
  grantAssignmentsOfResource : (resource, assignments, callback) ->
    @_store.grantAssignmentsOfResource resource, assignments, callback

  # 删除资源的权限分配记录
  removeAssignmentsOfResource : (resource, assignments, callback) ->
    @_store.removeAssignmentsOfResource resource, assignments, callback

  # 获取资源的权限分配记录，包括继承的记录
  getAssignmentsOfResource : (resource, callback) ->
    assignmentUnique = new AssignmentUnique
      resourceType : resource.type

    async.waterfall [ (callback) =>
      # 获取自身的分配记录
      if not resource.id
        callback()
        return

      @_store.getAssignmentsOfResource resource, (err, assignments) ->
        if err then return callback err
        assignmentUnique.addAssignments assignments
        callback()
      return

    , (callback) =>
      # 获取继承的分配记录
      if not resource.ancestors
        return callback null, assignmentUnique.getAssignmentArray()

      async.forEachSeries resource.ancestors, (eachAncestor, callback) =>
        @_store.getAssignmentsOfResource eachAncestor, (err, assignments) ->
          assignmentUnique.addAssignments assignments, true
          callback()

      , (err) ->
        if err then return callback err
        callback null, assignmentUnique.getAssignmentArray()

    ], callback

  # 获取受让人对某一类资源的权限分配记录
  getAssignmentsOfAssignee : (assignee, resourceType, callback) ->
    @_store.getAssignmentsOfAssignee assignee, resourceType, callback

module.exports = AssignmentManager
